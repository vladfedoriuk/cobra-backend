# Generated by Django 4.0 on 2021-12-29 19:24

import django.db.models.deletion
from django.db import migrations, models

import cobra.utils.models


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0004_alter_customuser_first_name_and_more"),
        ("project", "0003_projectinvitation"),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in-progress", "In progress"),
                            ("closed", "Closed"),
                            ("release-ready", "Release ready"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("description", models.TextField(verbose_name="description")),
                (
                    "estimate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Time estimation in hours.",
                        max_digits=5,
                        verbose_name="time estimate",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="project",
            name="slug",
            field=models.SlugField(max_length=250, verbose_name="slug"),
        ),
        migrations.AlterField(
            model_name="project",
            name="title",
            field=models.CharField(max_length=250, verbose_name="title"),
        ),
        migrations.AddConstraint(
            model_name="projectmembership",
            constraint=models.UniqueConstraint(
                fields=("project", "user"), name="project_and_user_unique_constraint"
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="assignee",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_tasks",
                to="user.customuser",
                verbose_name="assignee",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="subtasks",
                to="project.task",
                verbose_name="parent task",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(app_label)s_%(class)s_related",
                related_query_name="%(app_label)s_%(class)s",
                to="project.project",
                verbose_name="project",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="user",
            field=models.ForeignKey(
                on_delete=models.SET(cobra.utils.models.get_default_admin),
                related_name="%(app_label)s_%(class)s_related",
                related_query_name="%(app_label)s_%(class)s",
                to="user.customuser",
                verbose_name="user",
            ),
        ),
    ]
