# Generated by Django 4.0 on 2021-12-29 21:00

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import cobra.project.managers
import cobra.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("user", "0004_alter_customuser_first_name_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Epic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("description", models.TextField(verbose_name="description")),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=models.SET(cobra.utils.models.get_default_admin),
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)s",
                        to="user.customuser",
                        verbose_name="creator",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("slug", models.SlugField(max_length=250, verbose_name="slug")),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=models.SET(cobra.utils.models.get_default_admin),
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)s",
                        to="user.customuser",
                        verbose_name="creator",
                    ),
                ),
            ],
            managers=[
                ("objects", cobra.project.managers.ProjectManager()),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in-progress", "In progress"),
                            ("closed", "Closed"),
                            ("release-ready", "Release ready"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("task", "Task"),
                            ("user-story", "User story"),
                            ("bug", "Bug"),
                        ],
                        default="task",
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                ("title", models.CharField(max_length=250, verbose_name="title")),
                ("description", models.TextField(verbose_name="description")),
                (
                    "estimate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Time estimation in hours.",
                        max_digits=5,
                        verbose_name="time estimate",
                    ),
                ),
                (
                    "assignee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tasks",
                        to="user.customuser",
                        verbose_name="assignee",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=models.SET(cobra.utils.models.get_default_admin),
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)s",
                        to="user.customuser",
                        verbose_name="creator",
                    ),
                ),
                (
                    "epic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="project.epic",
                        verbose_name="related epic",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subtasks",
                        to="project.task",
                        verbose_name="parent task",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)s",
                        to="project.project",
                        verbose_name="project",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("developer", "Developer"),
                            ("maintainer", "Maintainer"),
                        ],
                        default="developer",
                        max_length=20,
                        verbose_name="role",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project.project",
                        verbose_name="project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.customuser",
                        verbose_name="user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectInvitation",
            fields=[
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_invitations",
                        to="user.customuser",
                        verbose_name="inviter",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)s",
                        to="project.project",
                        verbose_name="project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_related",
                        related_query_name="%(app_label)s_%(class)s",
                        to="user.customuser",
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="project",
            name="members",
            field=models.ManyToManyField(
                related_name="projects",
                related_query_name="project",
                through="project.ProjectMembership",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="epic",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(app_label)s_%(class)s_related",
                related_query_name="%(app_label)s_%(class)s",
                to="project.project",
                verbose_name="project",
            ),
        ),
        migrations.AddConstraint(
            model_name="projectmembership",
            constraint=models.UniqueConstraint(
                fields=("project", "user"), name="project_and_user_unique_constraint"
            ),
        ),
        migrations.AddConstraint(
            model_name="project",
            constraint=models.UniqueConstraint(
                fields=("slug", "creator"), name="slug_and_creator_unique_constraint"
            ),
        ),
    ]
